src/clml-svm-utils.lisp:(defun list->clml-vector (list)
src/clml-svm-utils.lisp:      (setf (aref product-array i) (list->clml-vector (append elem '(1.0d0))))
src/clml-svm-utils.lisp:      (setf (aref product-array i) (list->clml-vector (append elem '(-1.0d0))))
src/clml-svm-utils.lisp:		      (> (funcall trained-svm (list->clml-vector datapoint)) 0))
src/clml-svm-utils.lisp:		      (< (funcall trained-svm (list->clml-vector datapoint)) 0))
src/clml-svm-utils.lisp~:(defun list->clml-vector (list)
src/clml-svm-utils.lisp~:      (setf (aref product-array i) (list->clml-vector (append elem '(1.0d0))))
src/clml-svm-utils.lisp~:      (setf (aref product-array i) (list->clml-vector (append elem '(-1.0d0))))
src/clml-svm-utils.lisp~:		      (> (funcall trained-svm (list->clml-vector datapoint)) 0))
src/clml-svm-utils.lisp~:		      (< (funcall trained-svm (list->clml-vector datapoint)) 0))
src/packages.lisp:	   #:list->clml-vector
src/packages.lisp~:	   #:list->clml-vector
src/wss3-svm.lisp:(defun list->clml-vector (list)
src/wss3-svm.lisp:      (setf (aref product-array i) (list->clml-vector (append elem '(1.0d0))))
src/wss3-svm.lisp:      (setf (aref product-array i) (list->clml-vector (append elem '(-1.0d0))))
src/wss3-svm.lisp:		      (> (funcall trained-svm (list->clml-vector datapoint)) 0))
src/wss3-svm.lisp:		      (< (funcall trained-svm (list->clml-vector datapoint)) 0))
